{"version":3,"sources":["Home/hero.jpg","Navigation/index.js","Home/index.js","api.js","Episode/index.js","Character/index.js","Paginator/index.js","CharacterList/index.js","Location/index.js","LocationList/index.js","EpisodeList/index.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","react_default","a","createElement","className","react_router_dom","to","Home","style","backgroundImage","concat","heroImg","API","fetchCharacter","_x","_fetchCharacter","apply","this","arguments","_callee","id","res","regenerator_default","wrap","_context","prev","next","Array","isArray","join","fetch","then","body","json","data","addIds","episode","map","ep","url","match","location","origin","item","sent","abrupt","stop","_callee2","page","_args2","_context2","length","undefined","_callee3","_args3","_context3","fetchEpisode","_x2","_fetchEpisode","_callee4","_context4","characters","char","_callee5","_args5","_context5","_callee6","_context6","residents","Episode","_ref","_useState","useState","_useState2","Object","slicedToArray","setEpisode","_useState3","_useState4","setCharacters","useEffect","params","Fragment","name","air_date","key","CharacterShort","charData","EpisodeShort","_ref2","epData","Character","character","setCharacter","episodes","setEpisodes","src","image","alt","status","species","gender","Paginator","current","pages","onPageChange","onClick","ev","preventDefault","target","nodeName","dataset","toConsumableArray","val","idx","pageNumber","data-page","disabled","CharacterList","setPage","_useState5","_useState6","pageTotal","setPageTotal","_fetchCharacterAll","fetchCharacterAll","results","info","src_Paginator","Location","setLocation","setResidents","_x3","_fetchLocation","fetchLocation","dimension","type","LocationShort","locData","LocationList","locations","setLocations","_fetchLocationAll","fetchLocationAll","loc","EpisodeList","_fetchEpisodeAll","fetchEpisodeAll","App","src_Navigation","react_router","path","exact","component","Boolean","window","hostname","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.168544b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero.3278aec3.jpg\";","import React from \"react\";\nimport \"./nav.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navigation() {\n  return (\n    <nav className=\"nav\">\n      <ul className=\"nav__list\">\n        <li className=\"nav__item\">\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li className=\"nav__item\">\n          <Link to=\"/character/\">Characters</Link>\n        </li>\n        <li className=\"nav__item\">\n          <Link to=\"/location/\">Locations</Link>\n        </li>\n        <li className=\"nav__item\">\n          <Link to=\"/episode/\">Episodes</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport heroImg from \"./hero.jpg\";\nimport \"./home.css\";\n\nfunction Home() {\n  return (\n    <div\n      className=\"hero-image\"\n      style={{ backgroundImage: `url(${heroImg})` }}\n    />\n  );\n}\n\nexport default Home;\n","const API = \"https://rickandmortyapi.com/api\";\n\nexport async function fetchCharacter(id) {\n  if (Array.isArray(id)) {\n    id = id.join(\",\");\n  }\n\n  const res = await fetch(`${API}/character/${id}`)\n    .then(body => body.json())\n    .then(data => {\n      const addIds = data => {\n        data.episode = data.episode.map(ep => {\n          return {\n            url: ep,\n            id: ep.match(/\\/(\\d+)$/)[1]\n          };\n        });\n        data.location.id = data.location.url\n          ? data.location.url.match(/\\/(\\d+)$/)[1]\n          : null;\n        data.origin.id = data.origin.url\n          ? data.origin.url.match(/\\/(\\d+)$/)[1]\n          : null;\n\n        return data;\n      };\n\n      if (Array.isArray(data)) {\n        data = data.map(item => addIds(item));\n      } else {\n        data = addIds(data);\n      }\n\n      return data;\n    });\n\n  return res;\n}\n\nexport async function fetchCharacterAll(page = 1) {\n  const res = await fetch(`${API}/character?page=${page}`).then(body =>\n    body.json()\n  );\n\n  return res;\n}\n\nexport async function fetchEpisodeAll(page = 1) {\n  const res = await fetch(`${API}/episode?page=${page}`).then(body =>\n    body.json()\n  );\n\n  return res;\n}\n\nexport async function fetchEpisode(id) {\n  if (Array.isArray(id)) {\n    id = id.join(\",\");\n  }\n\n  const res = await fetch(`${API}/episode/${id}`)\n    .then(body => body.json())\n    .then(data => {\n      const addIds = data => {\n        data.characters = data.characters.map(char => {\n          return {\n            url: char,\n            id: char.match(/\\/(\\d+)$/)[1]\n          };\n        });\n\n        return data;\n      };\n\n      if (Array.isArray(data)) {\n        data = data.map(item => addIds(item));\n      } else {\n        data = addIds(data);\n      }\n\n      return data;\n    });\n\n  return res;\n}\n\nexport async function fetchLocationAll(page = 1) {\n  const res = await fetch(`${API}/location?page=${page}`).then(body =>\n    body.json()\n  );\n\n  return res;\n}\n\nexport async function fetchLocation(id) {\n  if (Array.isArray(id)) {\n    id = id.join(\",\");\n  }\n\n  const res = await fetch(`${API}/location/${id}`)\n    .then(body => body.json())\n    .then(data => {\n      const addIds = data => {\n        data.residents = data.residents.map(char => {\n          return {\n            url: char,\n            id: char.match(/\\/(\\d+)$/)[1]\n          };\n        });\n\n        return data;\n      };\n\n      if (Array.isArray(data)) {\n        data = data.map(item => addIds(item));\n      } else {\n        data = addIds(data);\n      }\n\n      return data;\n    });\n\n  return res;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { fetchEpisode, fetchCharacter } from \"../api\";\nimport { CharacterShort } from \"../Character\";\n\nexport function Episode({ match }) {\n  const [episode, setEpisode] = useState(null);\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    fetchEpisode(match.params.id).then(data => setEpisode(data));\n  }, []);\n\n  useEffect(() => {\n    if (!episode) {\n      return;\n    }\n\n    const charactersId = episode.characters.map(ep => ep.id);\n    fetchCharacter(charactersId).then(data => {\n      if (Array.isArray(data)) {\n        setCharacters(data);\n      } else {\n        setCharacters([data]);\n      }\n    });\n  }, [episode]);\n\n  return (\n    episode && (\n      <>\n        <h2>Episode</h2>\n        <div>\n          Name: {episode.name}\n          Air Date: {episode.air_date}\n        </div>\n        <div className=\"characters\">\n          <h3>Characters</h3>\n          <ul>\n            {characters.map(char => {\n              return (\n                <li key={char.id}>\n                  <Link to={`/character/${char.id}`}>\n                    <CharacterShort charData={char} />\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </>\n    )\n  );\n}\n\nexport function EpisodeShort({ epData }) {\n  return `${epData.episode} - ${epData.name}`;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./character.css\";\nimport { fetchCharacter, fetchEpisode } from \"../api\";\nimport { EpisodeShort } from \"../Episode\";\n\nexport function Character({ match }) {\n  const [character, setCharacter] = useState(null);\n  const [episodes, setEpisodes] = useState([]);\n\n  useEffect(() => {\n    fetchCharacter(match.params.id).then(data => {\n      setCharacter(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!character) {\n      return;\n    }\n\n    const episodesId = character.episode.map(ep => ep.id);\n    fetchEpisode(episodesId).then(data => {\n      if (Array.isArray(data)) {\n        setEpisodes(data);\n      } else {\n        setEpisodes([data]);\n      }\n    });\n  }, [character]);\n\n  return (\n    character && (\n      <>\n        <h2>Character info</h2>\n        <div className=\"char-info\">\n          <div className=\"avatar\">\n            <img src={character.image} alt={character.name} />\n          </div>\n          <div className=\"main-info\">\n            <h3>{character.name}</h3>\n            <dl className=\"description\">\n              <dt>Status:</dt>\n              <dd>{character.status}</dd>\n              <dt>Species:</dt>\n              <dd>{character.species}</dd>\n              <dt>Gender:</dt>\n              <dd>{character.gender}</dd>\n              <dt>Origin:</dt>\n              <dd>\n                {character.origin.id ? (\n                  <Link to={`/location/${character.origin.id}`}>\n                    {character.origin.name}\n                  </Link>\n                ) : (\n                  character.origin.name\n                )}\n              </dd>\n            </dl>\n          </div>\n        </div>\n        <div className=\"episodes\">\n          <h3>Episodes</h3>\n          <ul>\n            {episodes.map(ep => {\n              return (\n                <li key={ep.id}>\n                  <Link to={`/episode/${ep.id}`}>\n                    <EpisodeShort epData={ep} />\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </>\n    )\n  );\n}\n\nexport function CharacterShort({ charData }) {\n  return (\n    <div className=\"char-info char-info--short\">\n      <img\n        src={charData.image}\n        alt={charData.name}\n        className=\"char-info__avatar\"\n      />\n      <span>{charData.name}</span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./paginator.css\";\n\nfunction Paginator({ current, pages, onPageChange }) {\n  const handleClick = ev => {\n    ev.preventDefault();\n\n    if (ev.target.nodeName === \"BUTTON\") {\n      onPageChange(ev.target.dataset.page);\n    }\n  };\n\n  return (\n    pages > 1 && (\n      <div className=\"paginator\">\n        <ul onClick={handleClick} className=\"paginator-list\">\n          {[...Array(pages)].map((val, idx) => {\n            const pageNumber = idx + 1;\n            return (\n              <li key={idx} className=\"paginator-item\">\n                <button\n                  className=\"page-button\"\n                  data-page={pageNumber}\n                  disabled={current == pageNumber}\n                >\n                  {pageNumber}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    )\n  );\n}\n\nexport default Paginator;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./characterList.css\";\nimport { fetchCharacterAll } from \"../api\";\nimport { CharacterShort } from \"../Character\";\nimport Paginator from \"../Paginator\";\n\nfunction CharacterList() {\n  const [characters, setCharacters] = useState([]);\n  const [page, setPage] = useState(1);\n  const [pageTotal, setPageTotal] = useState(1);\n\n  useEffect(() => {\n    fetchCharacterAll(page).then(data => {\n      setCharacters(data.results);\n      setPageTotal(data.info.pages);\n    });\n  }, [page]);\n\n  return (\n    <>\n      <h2>Characters</h2>\n      <ul className=\"character-list\">\n        {characters.map(char => {\n          return (\n            <li key={char.id} className=\"character-item\">\n              <Link to={`/character/${char.id}`}>\n                <CharacterShort charData={char} />\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Paginator\n        current={page}\n        pages={pageTotal}\n        onPageChange={page => setPage(page)}\n      />\n    </>\n  );\n}\n\nexport default CharacterList;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { fetchLocation, fetchCharacter } from \"../api\";\nimport { CharacterShort } from \"../Character\";\n\nexport function Location({ match }) {\n  const [location, setLocation] = useState(null);\n  const [residents, setResidents] = useState([]);\n\n  useEffect(() => {\n    fetchLocation(match.params.id).then(data => setLocation(data));\n  }, []);\n\n  useEffect(() => {\n    if (!location) {\n      return;\n    }\n\n    const residentsId = location.residents.map(ep => ep.id);\n    fetchCharacter(residentsId).then(data => {\n      if (Array.isArray(data)) {\n        setResidents(data);\n      } else {\n        setResidents([data]);\n      }\n    });\n  }, [location]);\n\n  return (\n    location && (\n      <div>\n        <h2>Location</h2>\n        <div>\n          <h3>{location.name}</h3>\n\n          <dl className=\"description\">\n            <dt>Dimension:</dt>\n            <dd>{location.dimension}</dd>\n            <dt>Type:</dt>\n            <dd>{location.type}</dd>\n          </dl>\n        </div>\n\n        <div>\n          <h3>Residents</h3>\n          <ul>\n            {residents.map(char => {\n              return (\n                <li key={char.id}>\n                  <Link to={`/character/${char.id}`}>\n                    <CharacterShort charData={char} />\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    )\n  );\n}\n\nexport function LocationShort({ locData }) {\n  return locData.name;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { fetchLocationAll } from \"../api\";\nimport \"./locations.css\";\nimport { LocationShort } from \"../Location\";\nimport Paginator from \"../Paginator\";\n\nfunction LocationList() {\n  const [locations, setLocations] = useState([]);\n  const [page, setPage] = useState(1);\n  const [pageTotal, setPageTotal] = useState(1);\n\n  useEffect(() => {\n    fetchLocationAll(page).then(data => {\n      setLocations(data.results);\n      setPageTotal(data.info.pages);\n    });\n  }, [page]);\n\n  return (\n    <>\n      <h2>Locations</h2>\n      <ul className=\"locations-list\">\n        {locations.map(loc => {\n          return (\n            <li key={loc.id} className=\"location-item\">\n              <Link to={`/location/${loc.id}`}>\n                <LocationShort locData={loc} />\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Paginator\n        current={page}\n        pages={pageTotal}\n        onPageChange={page => setPage(page)}\n      />\n    </>\n  );\n}\n\nexport default LocationList;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { fetchEpisodeAll } from \"../api\";\nimport \"./episodesList.css\";\nimport Paginator from \"../Paginator\";\nimport { EpisodeShort } from \"../Episode\";\n\nfunction EpisodeList() {\n  const [episodes, setEpisodes] = useState([]);\n  const [page, setPage] = useState(1);\n  const [pageTotal, setPageTotal] = useState(1);\n\n  useEffect(() => {\n    fetchEpisodeAll(page).then(data => {\n      setEpisodes(data.results);\n      setPageTotal(data.info.pages);\n    });\n  }, [page]);\n\n  return (\n    <>\n      <h2>Episodes</h2>\n      <ul className=\"episodes-list\">\n        {episodes.map(ep => {\n          return (\n            <li key={ep.id} className=\"episode-item\">\n              <Link to={`/episode/${ep.id}`}>\n                <EpisodeShort epData={ep} />\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Paginator\n        current={page}\n        pages={pageTotal}\n        onPageChange={page => setPage(page)}\n      />\n    </>\n  );\n}\n\nexport default EpisodeList;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navigation from \"../Navigation\";\nimport Home from \"../Home\";\nimport CharacterList from \"../CharacterList\";\nimport { Character } from \"../Character\";\nimport LocationList from \"../LocationList\";\nimport { Location } from \"../Location\";\nimport EpisodeList from \"../EpisodeList\";\nimport { Episode } from \"../Episode\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Navigation />\n\n        <main className=\"main\">\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/character/\" exact component={CharacterList} />\n          <Route path=\"/character/:id\" exact component={Character} />\n          <Route path=\"/location/\" exact component={LocationList} />\n          <Route path=\"/location/:id\" exact component={Location} />\n          <Route path=\"/episode/\" exact component={EpisodeList} />\n          <Route path=\"/episode/:id\" exact component={Episode} />\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}